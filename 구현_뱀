
from collections import deque

n= int(input())
k=int(input())
apple=[]


for i in range(k):
    x,y=map(int,input().split())
    apple.append((x-1,y-1))
l=int(input())
move=[]
for i in range(l):
    t,direction = map(str,input().split())
    if direction == "D" :
        direction=1
    else :
        direction=-1
    move.append((int(t),direction))

nx,ny = 0,0
snake=deque([(nx,ny)])

time=0
d=[(0,1),(1,0),(0,-1),(-1,0)]
direction= 0



while True :
    time+=1


    dx,dy = d[direction]
    nx=nx+dx
    ny=ny+dy


    if (nx,ny) in snake or nx >=n or nx <= -1 or ny >=n or ny <=-1 :
        break


    snake.append((nx,ny))

    if (nx,ny) in apple :
        apple.remove((nx,ny))
    else :
        snake.popleft()

    for t, dir in move :
        if t==time :
            if direction +dir < 0 :
                direction = direction+dir+4
            else:
                direction = (direction+dir)%4
print(time)
